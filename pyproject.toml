[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


[project]
name = "xhtml2pdf"
authors = [
    {name = "Dirk Holtwick", email = "dirk.holtwick@gmail.com"},
]
maintainers = [
  {name = "Luis Zarate", email = "luisza14@gmail.com"},
  {name = "Timo Brembeck", email = "opensource@timo.brembeck.email"}
]
description = "PDF generator using HTML and CSS"
keywords = ["PDF", "HTML", "HTML", "XML", "CSS"]
readme = "README.rst"
license = {file = "LICENSE.txt"}
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Documentation",
    "Topic :: Multimedia",
    "Topic :: Office/Business",
    "Topic :: Printing",
    "Topic :: Text Processing",
    "Topic :: Text Processing :: Filters",
    "Topic :: Text Processing :: Fonts",
    "Topic :: Text Processing :: General",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Text Processing :: Markup :: XML",
    "Topic :: Utilities",
]
requires-python = ">=3.7"
dependencies = [
    "arabic-reshaper>=3.0.0",
    "html5lib>=1.1",
    "Pillow>=8.1.1",
    "pyHanko>=0.12.1",
    "pyhanko-certvalidator>=0.19.5",
    "pypdf>=3.1.0",
    "python-bidi>=0.4.2",
    "reportlab[pycairo]>=4.0.4",
    "svglib>=1.2.1",
]
dynamic = ["version"]

[project.urls]
Repository = "https://github.com/xhtml2pdf/xhtml2pdf"
"Bug tracker" = "https://github.com/xhtml2pdf/xhtml2pdf/issues"
Documentation = "https://xhtml2pdf.readthedocs.io/"
Changelog = "https://xhtml2pdf.readthedocs.io/en/latest/release-notes.html"

[project.optional-dependencies]
test = [
    "tomli>=2.0.1; python_version<'3.11'",
    "tox",
    "coverage>=5.3"
]
docs = [
    "sphinx>=6",
    "sphinx-rtd-theme>=0.5.0",
    "sphinxcontrib-pdfembed@git+https://github.com/SuperKogito/sphinxcontrib-pdfembed"
]
release = ["build", "twine"]

[project.scripts]
pisa = "xhtml2pdf.pisa:command"
xhtml2pdf = "xhtml2pdf.pisa:command"

[tool.setuptools.dynamic]
version = {attr = "xhtml2pdf.__version__"}

[tool.setuptools.packages.find]
exclude = ["tests", "tests.*", "manual_test", "manual_test.*"]


[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py{3.7,3.8,3.9,3.10,3.11}

    [testenv]
    deps = coverage[toml]
    commands =
        python -c 'import sys;print(sys.version_info)'
        python -c "from reportlab import Version; print('%s %s' % ('Reportlab Version', Version))"
        coverage run -m unittest discover tests
        coverage run -a testrender/testrender.py  --nofail --only-errors
"""


[tool.coverage.run]
branch = true
source = ["xhtml2pdf"]
omit = ["/usr/share/*"]

[tool.coverage.report]
precision = 2
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"
